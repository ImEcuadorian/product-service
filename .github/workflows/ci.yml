name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Java
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant permission to execute Gradle
        run: chmod +x gradlew

      - name: Run Unit Tests (TDD)
        run: ./gradlew test

      - name: Run BDD Tests (Cucumber)
        run: ./gradlew cucumberTest

      - name: Build App
        run: ./gradlew bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set image tag
        id: image_tag
        run: echo "tag=$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image to ACR
        run: |
          IMAGE=${{ secrets.ACR_REGISTRY }}/product-service:${{ steps.image_tag.outputs.tag }}
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "Pushed image: $IMAGE"

      - name: Set up Azure CLI
        uses: azure/login@v2.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4.0.3
        with:
          resource-group: rg-parking-platform
          cluster-name: parking-aks

      - name: Deploy to AKS with Helm
        run: |
          helm upgrade --install product-service ./helm/product-service \
            --namespace $(yq .namespace ./helm/product-service/values.yaml) \
            --create-namespace \
            --set image.repository=${{ secrets.ACR_REGISTRY }}/product-service \
            --set image.tag=${{ steps.image_tag.outputs.tag }} \
            --wait
